#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<string.h>
struct dmy
{
 int date;
 int month;
 int year;	
};
struct student
	{
	   int bookid;
	   char name[20];
	   char bname [30];
	   int studentid;
	   struct dmy s1;
	   struct student *next;
	
	}*head;
void insertfirst();
void insertlast();
void insertmiddle();
void display();
void deletefirst();
void deletelast();
void deletemiddle(int p);
void deleteall();
void deletesname(char key[]);
void deletebname(char key[]);
void deletesid();
void deletebid();
void reverse();
int count();
void searchbid();
void searchsid();
void searchsn();
void searchbn();
void insertd();
void sortingname();
void sortingbname();
void sortingsid();
void sortingbid();
void insertbyname();
void insertbybname();
void insertbysid();
void insertbybid();
void replacebyname();
int main()
{
  struct student *temp;
  struct student *insert;
  int i,n,m,l=0,j,p;
  char key[20];
  printf("\nEnter the Total Number of Student:\n");
  scanf("%d",&n);
  head = (struct student*)malloc(sizeof(struct student));
  printf("\nEnter the Name Of Student:\n");
  fflush(stdin);
  gets(head->name);
  printf("Enter student ID number:\n");
  scanf("%d",&head->studentid);
  printf("Enter the Name Of book:\n");
  fflush(stdin);
  gets(head->bname);
  printf("Enter Book ID number:\n");
  scanf("%d",&head->bookid);
  printf("Enter the issue date(DD/MM/YEAR):\n");
  scanf("%d/%d/%d",&head->s1.date,&head->s1.month,&head->s1.year);
  head->next = NULL;
  temp = head; 
  for(i=1;i<n;i++)
  {
   insert =(struct student*)malloc(sizeof(struct student));	
   printf("\nEnter the Name Of Student:\n");
   fflush(stdin);
   gets(insert->name);
   printf("Enter student ID number:\n");
   scanf("%d",&insert->studentid);
   printf("Enter the Name Of book:\n");
   fflush(stdin);
   gets(insert->bname);
   printf("Enter Book ID number:\n");
   scanf("%d",&insert->bookid);
   printf("Enter the issue date(DD/MM/YEAR):\n");
   scanf("%d/%d/%d",&insert->s1.date,&insert->s1.month,&insert->s1.year);
   insert->next = NULL;
   temp->next= insert;
   temp = temp->next; 
  }
    display();
    while(l!=1)
    {
    printf("\n\nPress 1 for INSERT Student:\n");
    printf("Press 2 for DELETE Student\n");
    printf("Press 3 for SEARCH Student:\n");
    printf("Press 4 for DISPLAY:\n");
	printf("Press 5 for REVERSE Element:\n");
	printf("Press 6 for NUMBER OF Student\n");
    printf("Press 7 for ADD Student\n");
    printf("Press 8 for SORTING\n");
	printf("Press 9 for  REPLACE BY NAME:\n");
    printf("press 10 for EXIT\n");
    scanf("%d",&m);
   
    	 switch(m)
    {
    	case 1 : 
    	         printf("\nPress 1 For INSERT BY STUDENT NAME:\n");
    	         printf("Press 2 For INSERT BY BOOK NAME:\n");
    	         printf("Press 3 For INSERT BY STUDENT ID:\n");
    	         printf("Press 4 FOR INSERT BY BOOK ID");
    	         scanf("%d",&j);
    	         switch(j)
    	         { 
    	            case 1 : 
    	                     insertbyname();
    	                     break;
                    case 2 :
                             insertbybname();
                             break;
                    case 3:
                            insertbysid();
                            break;	
                    case 4: 
                             insertbybid();
                             break;
       	         }
    	          break;
        case 2 :
		         printf("\nPress 1 For DELETE by Student Name:\n");
    	         printf("Press 2 For DELETE  By  Book Name\n");
    	         printf("Press 3 For DELETE  By  Student ID\n");
    	         printf("Press 4 For DELETE  By  Book ID\n");
                 printf("Enter 5 For DELETE  ALL Record:\n");
    	         scanf("%d",&j);
    	         switch(j)
    	         { 
    	            case 1 : 
                              printf("\nEnter the STUDENT Name:\n");
	                          fflush(stdin);
                          	  gets(key);
                              deletesname(key);
                              break;
                    case 2 :
                              printf("\nEnter the BOOK Name:\n");
	                          fflush(stdin);
                          	  gets(key);
                              deletebname(key);
                             break;
                    case 3:
                    	    deletesid();
                            break;	
                    case 4:
                            deletebid();
                            break;
                    case 5:
                            deleteall();
                            break;
       	         }
       	         break;
        case 3 : 
		         printf("\nPress 1 For SEARCH by Student Name\n");
    	         printf("Press 2 For SEARCH by book Name\n");
    	         printf("Press 3 For SEARCH by Studet ID\n");
    	         printf("Press 4 For SEARCH by Book ID\n");
    	         scanf("%d",&j);
    	         switch(j)
    	         { 
    	            case 1 : 
    	                     searchsn();
    	                     break;
                    case 2 :
                             searchbn();
                             break;
                    case 3:
                    	    
                            searchsid();
                            break;	
                    case 4:
                            searchbid();
                            break;
    	         }
    	         break;
		case 4 :
				display();
		   	    break;
        case 5 :
                 reverse();
                 break;
        case 6 : 
                 count();
                 break;
        case 7 :
                 insertd();
                 break;
        case 8 :
                 printf("\nPress 1 For SORTING by Student Name\n");
    	         printf("Press 2 For SORTING by book Name\n");
    	         printf("Press 3 For SORTING by Studet ID\n");
    	         printf("Press 4 For SORTING by Book ID\n");
    	         scanf("%d",&j);
    	         switch(j)
    	         { 
    	            case 1 : 
    	                     sortingname();
    	                     break;
                    case 2 :
                             sortingbname();
                             break;
                    case 3:
                    	    
                            sortingsid();
                            break;	
                    case 4:
                            sortingbid();
                            break;
    	         }
    	         break;
        case 9 :
                  replacebyname();
                  break;
        case 10 :
                 l = 1;
                 break;
    }    	
    }
    getch();
}


void deletefirst()
 {
	 struct student *first;
     first = head;
     head = head->next;
     free(first);
 }
 
void deletelast()
 {
 	struct student *last;
 	struct student *secondlast;
 			last = head;
 	secondlast = head;
 	while(last->next != NULL)
 	{
	 	secondlast = last;
	 	last = last->next;
    }
    secondlast->next = NULL;	
 }
 
 
void deletemiddle(int p)
 {
 	struct student *del;
 	struct student *secondlast;
 	int i;
 	del = head;
 	secondlast = head;
    if(p==1)
    deletefirst();
    int result = count();
    if(p == result)
    deletelast();
 	for(i=1;i<p;i++)
 	{
 		secondlast = del;
 		del = del->next;
    }
    secondlast->next = del->next;
	free(del);  
 }
 
 void insertfirst()
{
     struct student *first;
	 first =(struct student*)malloc(sizeof(struct student));
     printf("Enter the Name Of Student:\n");
     fflush(stdin);
     gets(first->name);
     printf("\nEnter student ID number:\n");
     scanf("%d",&first->studentid);
     printf("Enter the Name Of book:\n");
     fflush(stdin);
     gets(first->bname);
     printf("Enter Book ID number:\n");
     scanf("%d",&first->bookid);
     printf("Enter the issue date(DD/MM/YEAR):\n");
     scanf("%d/%d/%d",&first->s1.date,&first->s1.month,&first->s1.year);
     first->next = head;
     head = first;
}

void insertlast()
{
  struct student *last;
  struct student *temp;
  last =(struct student*)malloc(sizeof(struct student));	
  printf("\nEnter the Name Of Student:\n");
  fflush(stdin);
  gets(last->name);
  printf("\nEnter student ID number:\n");
  scanf("%d",&last->studentid);
  printf("Enter the Name Of book:\n");
  fflush(stdin);
  gets(last->bname);
  printf("Enter Book ID number:\n");
  scanf("%d",&last->bookid);
  printf("Enter the issue date(DD/MM/YEAR):\n");
  scanf("%d/%d/%d",&last->s1.date,&last->s1.month,&last->s1.year);
  last->next = NULL;
  temp = head;
  while(temp->next != NULL)
  temp = temp->next;
  temp->next = last;
}

void insertmiddle()
{
 struct student *temp;
 struct student *add;
 int p,i;
 add =(struct student*)malloc(sizeof(struct student));
 printf("\nEnter the Position you Want to insert:\n");
 scanf("%d",&p);
 if(p==1)
 insertfirst();
 int result = count();
 if(p == result)
  insertlast();
  printf("Enter the Name Of Student:\n");
  fflush(stdin);
  gets(add->name);
  printf("Enter student ID number:\n");
  scanf("%d",&add->studentid);
  printf("Enter the Name Of book:\n");
  fflush(stdin);
  gets(add->bname);
  printf("Enter Book ID number:\n");
  scanf("%d",&add->bookid);
  printf("Enter the issue date(DD/MM/YEAR):\n");
  scanf("%d/%d/%d",&add->s1.date,&add->s1.month,&add->s1.year);
 temp = head;
 for(i=1;i<p-1;i++)
 {
  temp = temp->next;
 }
 add->next = temp->next;
 temp->next= add;   
}

void display()
{
	struct student *temp;
	temp = head;
	while(temp!= NULL)
	{
	  printf("\n\nName Of Student: = %s\n",temp->name);
      printf("student ID number: = %d\n",temp->studentid);
      printf("Name Of book: = %s\n",temp->bname);
      printf("Book ID number:=%d\n",temp->bookid);
      printf("issue date(DD/MM/YEAR): %d/%d/%d\n",temp->s1.date,temp->s1.month,temp->s1.year);
	  temp = temp->next;
	}
}

void deleteall()
{
	struct student *temp;
	while(head != NULL)
	{
		temp = head;
		head = head->next;
		free(temp);
	}
}



void reverse()
{
	struct student *cur;
	struct student *pre;
	if(head!=0)
	{
	  pre = head;
	  cur = head->next;
	  head = head->next;
	  pre->next = NULL;
	  while(head!=NULL)
	  {
  		head = head->next;
  		cur->next = pre;
  		pre = cur;
  		cur = head;
   	  }	
   	  head = pre;
	}
}

int count()
{
	struct student *temp;
	int count=0;
	temp = head;
	while(temp!=0)
	{
		count++;
		temp = temp->next;
	}
	printf("\nTotal Number of Employ is %d\n",count);
	return count;
}

void searchsn()
{
	struct student *temp;
	struct student *first;
	int index=0,result,i,j=0;
	char key[20];
	printf("Enter the name you want to search:\n");
	fflush(stdin);
	gets(key);
	first = head;
	temp = first;
	while(temp != NULL)
	{
		index = 0;
    	while((temp != NULL && strcmp(temp->name,key) != 0))
	    {
		index++;
		temp = temp->next;
	    }
	    result = index;	
	    if(temp!= NULL)
     	{
	     temp = first;
	     printf("Record Found:\n");
	     for(i=0;i<result;i++)
	     temp = temp->next;
         printf("\nName Of Student:    = %s\n",temp->name);
         printf("student ID number:    = %d\n",temp->studentid);
         printf("Name Of book:         = %s\n",temp->bname);
         printf("Book ID number:       = %d\n",temp->bookid);
         printf("issue date(DD/MM/YEAR): %d/%d/%d\n",temp->s1.date,temp->s1.month,temp->s1.year);
         for(i=0;i<=result;i++)
	     first = first->next;
	     temp = first;
	     j++;
	    }
	    else if (j==0)
	    printf("Record Not Found\n");
	    else
	    break;
	}
}


void searchsid()
{
	struct student *temp;
	struct student *first;
	int index=0,result,i,j=0;
	int key;
	printf("Enter Student id Number:\n");
	scanf("%d",&key);
	first = head;
	temp = first;
	while(temp != NULL)
	{
	index = 0;
    while(temp != NULL && temp->studentid!=key)
    {
	 index++;
	 temp = temp->next;
     }
      result = index;	
      if(temp!= NULL)
 	  {
     	 temp = first;
	     printf("Record Found:\n");
	     for(i=0;i<result;i++)
	     temp = temp->next;
         printf("\nName Of Student:   = %s\n",temp->name);
         printf("student ID number: = %d\n",temp->studentid);
         printf("Name Of book:      = %s\n",temp->bname);
         printf("Book ID number:     =%d\n",temp->bookid);
         printf("issue date(DD/MM/YEAR): %d/%d/%d\n",temp->s1.date,temp->s1.month,temp->s1.year);
         
         for(i=0;i<=result;i++)
         first = first->next;
	     temp = first;
	     j++;
	    }
	    else if(j==0)
	    printf("Record Not Found!\n");
	    else
	    break;
	    
	}
}

void searchbid()
{
	struct student *temp;
	struct student *first;
	int index=0,result,i,j=0;
	int key;
	printf("Enter book id Number:\n");
	scanf("%d",&key);
	first = head;
	temp = first;
	while(temp != NULL)
	{
	 temp = first;
	 index = 0;
     while(temp != NULL && temp->bookid!=key)
     {
     index++;
	 temp = temp->next;
     }
     result = index;	
     if(temp!= NULL)
 	 {
     temp = first;
     printf("Record Found:\n");
     for(i=0;i<result;i++)
     temp = temp->next;
     printf("\nName Of Student:   = %s\n",temp->name);
     printf("student ID number: = %d\n",temp->studentid);
     printf("Name Of book:      = %s\n",temp->bname);
     printf("Book ID number:     =%d\n",temp->bookid);
     printf("issue date(DD/MM/YEAR): %d/%d/%d\n",temp->s1.date,temp->s1.month,temp->s1.year);
     for(i=0;i<=result;i++)
     first = first->next;
     temp = first;
     j++;
     }
     else if(j==0)
     printf("Record Not Found\n");
     else 
     break;
	}
}

void searchbn()
{
	struct student *temp;
	struct student *first;
	int index=0,result,i,j=0;
	char key[20];
	printf("Enter the book name you want to search:\n");
	fflush(stdin);
	gets(key);
	first = head;
	temp = first;
	while(temp != NULL)
	{
	temp = first;
	index = 0;
	while((temp != NULL && strcmp(temp->bname,key) != 0))
    {
	index++;
	temp = temp->next;
    }
    result = index;	
    if(temp!= NULL)
   	{
    temp = first;
    printf("Record Found:\n");
    for(i=0;i<result;i++)
    temp = temp->next;
    printf("\nName Of Student:   = %s\n",temp->name);
    printf("student ID number: = %d\n",temp->studentid);
    printf("Name Of book:      = %s\n",temp->bname);
    printf("Book ID number:     =%d\n",temp->bookid);
    printf("issue date(DD/MM/YEAR): %d/%d/%d\n",temp->s1.date,temp->s1.month,temp->s1.year);
    for(i=0;i<=result;i++)
    first = first->next;
    temp = first;
    j++;
    }
    else if(j==0)
    printf("NO Record Found");
    else
    break;
	}
}

void insertd()
{
  struct student *last;
  struct student *temp;
  int n,i;
  printf("\nEnter the total number of student You want to add:\n");
  scanf("%d",&n);
  for(i=1;i<=n;i++)
  {
 	if(head==NULL)
 	{
	 	insertfirst();
	 	n--;
	 }
	 if(n==0)
	 break;
  last =(struct student*)malloc(sizeof(struct student));	
  printf("Enter the Name Of Student:\n");
  fflush(stdin);
  gets(last->name);
  printf("Enter student ID number:\n");
  scanf("%d",&last->studentid);
  printf("Enter the Name Of book:\n");
  fflush(stdin);
  gets(last->bname);
  printf("Enter Book ID number:\n");
  scanf("%d",&last->bookid);
  printf("Enter the issue date(DD/MM/YEAR):\n");
  scanf("%d/%d/%d",&last->s1.date,&last->s1.month,&last->s1.year);
  last->next = NULL;
  temp = head;
  while(temp->next != NULL)
  temp = temp->next;
  temp->next = last;
  }
}

void deletebname(char key[])
{
	struct student *temp;
	int index=1,i,result,l=0;
	temp = head;
	while(temp != NULL && strcmp(temp->bname,key) != 0)
	{
	  index++;
	  temp = temp->next;
	}
	if(temp!= NULL)
	printf("THE NAME IS AT POSITION %d\n",index);
	result = count();
	
    if(temp!= NULL )
   	{ 
        l = 1;
        if (index==1)
        deletefirst();
        else if(index==result)
        deletelast();
        else
        deletemiddle(index);
    }
       else
       printf("\nRecord not found!\n");
       if(l==1)
       deletebname(key);
}
void deletesid()
{
	struct student *temp;
	int index=1,i,result;
	int key;
	printf("\nEnter the STUDENT ID you want to delete:\n");
    scanf("%d",&key);
	temp = head;
	while(temp != NULL && (temp->studentid !=key))
	{
	  index++;
	  temp = temp->next;
	}
	printf("THE NAME IS AT POSITION %d\n",index);
	result = count();
	
    if(temp!= NULL )
   	{ 
  
        if (index==1)
        deletefirst();
        else if(index==result)
        deletelast();
        else
        deletemiddle(index);
    }
       else
       printf("\nRecord not found!\n");
}

void deletebid()
{
	struct student *temp;
	int index=1,i,result;
	int key;
	printf("\nEnter the BOOK ID you want to delete:\n");
    scanf("%d",&key);
	temp = head;
	while(temp != NULL && (temp->bookid !=key))
	{
	  index++;
	  temp = temp->next;
	}
	printf("THE NAME IS AT POSITION %d\n",index);
	result = count();
	
    if(temp!= NULL )
   	{ 
  
        if (index==1)
        deletefirst();
        else if(index==result)
        deletelast();
        else
        deletemiddle(index);
    }
       else
       printf("\nRecord not found!\n");
}

void sortingsid()
{
	struct student *temp;
	struct student *prev;
	int data;
	char str[20];
	temp = head;
	prev = head;
	while(prev!=NULL)
	{
		temp = prev->next;
		while(temp!=NULL)
		{
			if(prev->studentid > temp->studentid)
			{
				data = prev->studentid;
				prev->studentid = temp->studentid;
				temp->studentid = data;
				data = prev->bookid;
				prev->bookid = temp->bookid;
				temp->bookid = data;
				strcpy(str,prev->name);
				strcpy(prev->name,temp->name);
				strcpy(temp->name,str);
				strcpy(str,prev->bname);
				strcpy(prev->bname,temp->bname);
				strcpy(temp->bname,str);
				data = prev->s1.date;
				prev->s1.date= temp->s1.date;
				temp->s1.date = data;
				data = prev->s1.month;
				prev->s1.month= temp->s1.month;
				temp->s1.month = data;
				data = prev->s1.year;
				prev->s1.year= temp->s1.year;
				temp->s1.year = data;	
			}
			temp = temp->next;
		}
		prev = prev->next;
	}
}

void sortingbid()
{
	struct student *temp;
	struct student *prev;
	int data;
	char str[20];
	temp = head;
	prev = head;
	while(prev!=NULL)
	{
		temp = prev->next;
		while(temp!=NULL)
		{
			if(prev->bookid > temp->bookid)
			{
				data = prev->studentid;
				prev->studentid = temp->studentid;
				temp->studentid = data;
				data = prev->bookid;
				prev->bookid = temp->bookid;
				temp->bookid = data;
				strcpy(str,prev->name);
				strcpy(prev->name,temp->name);
				strcpy(temp->name,str);
				strcpy(str,prev->bname);
				strcpy(prev->bname,temp->bname);
				strcpy(temp->bname,str);
				data = prev->s1.date;
				prev->s1.date= temp->s1.date;
				temp->s1.date = data;
				data = prev->s1.month;
				prev->s1.month= temp->s1.month;
				temp->s1.month = data;
				data = prev->s1.year;
				prev->s1.year= temp->s1.year;
				temp->s1.year = data;	
			}
			temp = temp->next;
		}
		prev = prev->next;
	}
}

void sortingname()
{
	struct student *temp;
	struct student *prev;
	int data;
	char str[20];
	temp = head;
	prev = head;
	while(prev!=NULL)
	{
		temp = prev->next;
		while(temp!=NULL)
		{
			if(strcmp(prev->name,temp->name)>0)
			{
				data = prev->studentid;
				prev->studentid = temp->studentid;
				temp->studentid = data;
				data = prev->bookid;
				prev->bookid = temp->bookid;
				temp->bookid = data;
				strcpy(str,prev->name);
				strcpy(prev->name,temp->name);
				strcpy(temp->name,str);
				strcpy(str,prev->bname);
				strcpy(prev->bname,temp->bname);
				strcpy(temp->bname,str);
				data = prev->s1.date;
				prev->s1.date= temp->s1.date;
				temp->s1.date = data;
				data = prev->s1.month;
				prev->s1.month= temp->s1.month;
				temp->s1.month = data;
				data = prev->s1.year;
				prev->s1.year= temp->s1.year;
				temp->s1.year = data;	
			}
			temp = temp->next;
		}
		prev = prev->next;
	}
}

void sortingbname()
{
	struct student *temp;
	struct student *prev;
	int data;
	char str[20];
	temp = head;
	prev = head;
	while(prev!=NULL)
	{
		temp = prev->next;
		while(temp!=NULL)
		{
			if(strcmp(prev->bname,temp->bname)>0)
			{
				data = prev->studentid;
				prev->studentid = temp->studentid;
				temp->studentid = data;
				data = prev->bookid;
				prev->bookid = temp->bookid;
				temp->bookid = data;
				strcpy(str,prev->name);
				strcpy(prev->name,temp->name);
				strcpy(temp->name,str);
				strcpy(str,prev->bname);
				strcpy(prev->bname,temp->bname);
				strcpy(temp->bname,str);
				data = prev->s1.date;
				prev->s1.date= temp->s1.date;
				temp->s1.date = data;
				data = prev->s1.month;
				prev->s1.month= temp->s1.month;
				temp->s1.month = data;
				data = prev->s1.year;
				prev->s1.year= temp->s1.year;
				temp->s1.year = data;	
			}
			temp = temp->next;
		}
		prev = prev->next;
	}
}

void insertbyname()
{
	sortingname();
	struct student *first;
	struct student *temp;
	first = (struct student*)malloc(sizeof(struct student));
	 printf("Enter the Name Of Student:\n");
     fflush(stdin);
     gets(first->name);
     printf("\nEnter student ID number:\n");
     scanf("%d",&first->studentid);
     printf("Enter the Name Of book:\n");
     fflush(stdin);
     gets(first->bname);
     printf("Enter Book ID number:\n");
     scanf("%d",&first->bookid);
     printf("Enter the issue date(DD/MM/YEAR):\n");
     scanf("%d/%d/%d",&first->s1.date,&first->s1.month,&first->s1.year);
    if(strcmp(head->name,first->name)>=0)
    {
    	first->next = head;
		head = first; 
    }
    else
    {
    	 temp = head;
     while(temp->next != NULL && strcmp(temp->next->name,first->name)<0)
     {
     	temp = temp->next;
     }
     first->next = temp->next;
     temp->next = first;
    }
}

void insertbybname()
{
	sortingbname();
	struct student *first;
	struct student *temp;
	first = (struct student*)malloc(sizeof(struct student));
	 printf("Enter the Name Of Student:\n");
     fflush(stdin);
     gets(first->name);
     printf("\nEnter student ID number:\n");
     scanf("%d",&first->studentid);
     printf("Enter the Name Of book:\n");
     fflush(stdin);
     gets(first->bname);
     printf("Enter Book ID number:\n");
     scanf("%d",&first->bookid);
     printf("Enter the issue date(DD/MM/YEAR):\n");
     scanf("%d/%d/%d",&first->s1.date,&first->s1.month,&first->s1.year);
      if(strcmp(head->bname,first->bname)>=0)
    {
    	first->next = head;
		head = first; 
    }
    else
    {
    	 temp = head;
     while(temp->next != NULL && strcmp(temp->next->bname,first->bname)<0)
     {
     	temp = temp->next;
     }
     first->next = temp->next;
     temp->next = first;
    }
}

void insertbysid()
{
	sortingsid();
	struct student *first;
	struct student *temp;
	first = (struct student*)malloc(sizeof(struct student));
	 printf("Enter the Name Of Student:\n");
     fflush(stdin);
     gets(first->name);
     printf("\nEnter student ID number:\n");
     scanf("%d",&first->studentid);
     printf("Enter the Name Of book:\n");
     fflush(stdin);
     gets(first->bname);
     printf("Enter Book ID number:\n");
     scanf("%d",&first->bookid);
     printf("Enter the issue date(DD/MM/YEAR):\n");
     scanf("%d/%d/%d",&first->s1.date,&first->s1.month,&first->s1.year);
    if(head->studentid > first->studentid)
    {
      first->next = head;
	  head = first;	
    }
    else
	{
      temp = head;
     while(temp->next != NULL && (temp->next->studentid < first->studentid))
     {
     	temp = temp->next;
     }
     first->next = temp->next;
     temp->next = first;
    }
}

void insertbybid()
{
	sortingbid();
	struct student *first;
	struct student *temp;
	first = (struct student*)malloc(sizeof(struct student));
	 printf("Enter the Name Of Student:\n");
     fflush(stdin);
     gets(first->name);
     printf("\nEnter student ID number:\n");
     scanf("%d",&first->studentid);
     printf("Enter the Name Of book:\n");
     fflush(stdin);
     gets(first->bname);
     printf("Enter Book ID number:\n");
     scanf("%d",&first->bookid);
     printf("Enter the issue date(DD/MM/YEAR):\n");
     scanf("%d/%d/%d",&first->s1.date,&first->s1.month,&first->s1.year);
      if(head->bookid > first->bookid)
    {
      first->next = head;
	  head = first;	
    }
    else
	{
      temp = head;
     while(temp->next != NULL && (temp->next->bookid < first->bookid))
     {
     	temp = temp->next;
     }
     first->next = temp->next;
     temp->next = first;
    }
}


void replacebyname()
{
	char key[20];
	int i,j;
	struct student *temp;
	struct student *first;
	temp = head;
	printf("ENTER THE NAME YOU WANT TO EDIT DATA:\n");
	fflush(stdin);
	gets(key);
	while(temp!=NULL)
	{
		if(strcmp(temp->name,key)==0)
		{
			first = temp;
		  break;
		}
    	temp = temp->next;
	}
	if(temp!=NULL)
	{
	 printf("Enter the Name Of Student:\n");
      fflush(stdin);
      gets(first->name);
     printf("\nEnter student ID number:\n");
     scanf("%d",&first->studentid);
     printf("Enter the Name Of book:\n");
     fflush(stdin);
     gets(first->bname);
     printf("Enter Book ID number:\n");
     scanf("%d",&first->bookid);
     printf("Enter the issue date(DD/MM/YEAR):\n");
     scanf("%d/%d/%d",&first->s1.date,&first->s1.month,&first->s1.year);
	}
	else
	printf("NOT FOUND!!\n");
}
void deletesname(char key[])
{
	struct student *temp;
	int index=1,i,result,l=0;
	temp = head;
	while(temp != NULL && strcmp(temp->name,key) != 0)
	{
	  index++;
	  temp = temp->next;
	}
	if(temp!= NULL)
	printf("THE NAME IS AT POSITION %d\n",index);
	result = count();
	
    if(temp!= NULL )
   	{ 
        l = 1;
        if (index==1)
        deletefirst();
        else if(index==result)
        deletelast();
        else
        deletemiddle(index);
    }
       else
       printf("\nRecord not found!\n");
       if(l==1)
       deletesname(key);
}
