#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<string.h>
struct dmy
{
 int date;
 int month;
 int year;	
};
struct student
	{
	   int bookid;
	   char name[20];
	   char bname [30];
	   int studentid;
	   struct dmy s1;
	   struct student *next;
	
	}*head,*ref;
void insertfirst();
void insertlast();
void insertmiddle();
void display();
void deletefirst();
void deletelast();
void deletemiddle(int p);
void deleteall();
void deletesname(char key[]);
void deletebname(char key[]);
void deletesid();
void deletebid();
void reverse();
int count();
void searchbid();
void searchsid();
void searchsn();
void searchbn();
void insertd();
void sortingname();
void sortingbname();
void sortingsid();
void sortingbid();
void insertbyname();
void insertbybname();
void insertbysid();
void insertbybid();
void replacebyname(char key[],int n);
int main()
{
  struct student *temp;
  struct student *insert;
  struct student *prev;
  char key[20];
  int i,n,m,l=0,j,p;
  printf("Enter the Total Number of Student:\n");
  scanf("%d",&n);
  head = (struct student*)malloc(sizeof(struct student));
  printf("Enter the Name Of Student:\n");
  fflush(stdin);
  gets(head->name);
  printf("Enter student ID number:\n");
  scanf("%d",&head->studentid);
  printf("Enter the Name Of book:\n");
  fflush(stdin);
  gets(head->bname);
  printf("Enter Book ID number:\n");
  scanf("%d",&head->bookid);
  printf("Enter the issue date(DD/MM/YEAR):\n");
  scanf("%d/%d/%d",&head->s1.date,&head->s1.month,&head->s1.year);
  head->next = NULL;
  prev= head; 
  for(i=1;i<n;i++)
  {
   insert =(struct student*)malloc(sizeof(struct student));	
   printf("\n\nEnter the Name Of Student:\n");
   fflush(stdin);
   gets(insert->name);
   printf("Enter student ID number:\n");
   scanf("%d",&insert->studentid);
   printf("Enter the Name Of book:\n");
   fflush(stdin);
   gets(insert->bname);
   printf("Enter Book ID number:\n");
   scanf("%d",&insert->bookid);
   printf("Enter the issue date(DD/MM/YEAR):\n");
   scanf("%d/%d/%d",&insert->s1.date,&insert->s1.month,&insert->s1.year);
   insert->next = NULL;
   prev->next= insert;
   prev = prev->next; 
  }
  prev->next = head;
    display();
         while(l!=1)
    {
    printf("\n\nPress 1 for INSERT Student:\n");
    printf("Press 2 for DELETE Student\n");
    printf("Press 3 for SEARCH Student:\n");
    printf("Press 4 for DISPLAY:\n");
	printf("Press 5 for REVERSE Element:\n");
	printf("Press 6 for NUMBER OF Student\n");
    printf("Press 7 for ADD Student\n");
    printf("Press 8 for SORTING\n");
	printf("Press 9 for REPLACE:\n");
	printf("Press 10 for EXIT :\n");
    
    scanf("%d",&m);
   
    	 switch(m)
    {
    	case 1 : 
    	         printf("\nPress 1 For INSERT BY STUDENT NAME:\n");
    	         printf("Press 2 For INSERT BY BOOK NAME:\n");
    	         printf("Press 3 For INSERT BY STUDENT ID:\n");
    	         printf("Press 4 FOR INSERT BY BOOK ID");
    	         scanf("%d",&j);
    	         switch(j)
    	         { 
    	            case 1 : 
    	                     insertbyname();
    	                     break;
                    case 2 :
                             insertbybname();
                             break;
                    case 3:
                            insertbysid();
                            break;	
                    case 4: 
                             insertbybid();
                             break;
       	         }
    	          break;
        case 2 :
		         printf("\nPress 1 For DELETE by Student Name:\n");
    	         printf("Press 2 For DELETE  By  Book Name\n");
    	         printf("Press 3 For DELETE  By  Student ID\n");
    	         printf("Press 4 For DELETE  By  Book ID\n");
                 printf("Enter 5 For DELETE  ALL Record:\n");
    	         scanf("%d",&j);
    	         switch(j)
    	         { 
    	            case 1 : 
                              printf("\nEnter the Student Name:\n");
	                          fflush(stdin);
                          	  gets(key);
                              deletesname(key);
                              break;
                    case 2 :
                              printf("\nEnter the BOOK Name:\n");
	                          fflush(stdin);
                          	  gets(key);
                              deletebname(key);
                              break;
                    case 3:
                    	    deletesid();
                            break;	
                    case 4:
                            deletebid();
                            break;
                    case 5:
                            deleteall();
                            break;
       	         }
       	         break;
        case 3 : 
		         printf("\nPress 1 For SEARCH by Student Name\n");
    	         printf("Press 2 For SEARCH by book Name\n");
    	         printf("Press 3 For SEARCH by Studet ID\n");
    	         printf("Press 4 For SEARCH by Book ID\n");
    	         scanf("%d",&j);
    	         switch(j)
    	         { 
    	            case 1 : 
    	                     searchsn();
    	                     break;
                    case 2 :
                             searchbn();
                             break;
                    case 3:
                    	    
                            searchsid();
                            break;	
                    case 4:
                            searchbid();
                            break;
    	         }
    	         break;
		case 4 :
				display();
		   	    break;
        case 5 :
                 reverse();
                 break;
        case 6 : 
                 count();
                 break;
        case 7 :
                 insertd();
                 break;
        case 8 :
                 printf("\nPress 1 For SORTING by Student Name\n");
    	         printf("Press 2 For SORTING by book Name\n");
    	         printf("Press 3 For SORTING by Studet ID\n");
    	         printf("Press 4 For SORTING by Book ID\n");
    	         scanf("%d",&j);
    	         switch(j)
    	         { 
    	            case 1 : 
    	                     sortingname();
    	                     break;
                    case 2 :
                             sortingbname();
                             break;
                    case 3:
                    	    
                            sortingsid();
                            break;	
                    case 4:
                            sortingbid();
                            break;
    	         }
    	         break;
        case 9  :
                  	printf("ENTER THE NAME YOU WANT TO EDIT DATA:\n");
	                fflush(stdin);
	                gets(key);
                    replacebyname(key,0);
                    break;
        case 10 :
                 l = 1;
                 break;
    }    	
    }
    getch();
}

void display()
{
	struct student *temp;
	temp = head;
	
	if(head!=NULL)
	{
		 do
	{
	  printf("Name Of Student: = %s\n",temp->name);
      printf("student ID number: = %d\n",temp->studentid);
      printf("Name Of book: = %s\n",temp->bname);
      printf("Book ID number:=%d\n",temp->bookid);
      printf("issue date(DD/MM/YEAR): %d/%d/%d\n\n\n",temp->s1.date,temp->s1.month,temp->s1.year);
      if(temp->next == NULL)
      break;
	  temp = temp->next;
	}while(temp!= head);
	}
   
}

void insertfirst()
{
   struct student *first;
   struct student *current;
   if(head==NULL)
   {
   	head = (struct student*)malloc(sizeof(struct student));
  printf("Enter the Name Of Student:\n");
  fflush(stdin);
  gets(head->name);
  printf("Enter student ID number:\n");
  scanf("%d",&head->studentid);
  printf("Enter the Name Of book:\n");
  fflush(stdin);
  gets(head->bname);
  printf("Enter Book ID number:\n");
  scanf("%d",&head->bookid);
  printf("Enter the issue date(DD/MM/YEAR):\n");
  scanf("%d/%d/%d",&head->s1.date,&head->s1.month,&head->s1.year);
  head->next = NULL;
   }
   else
   	{
   	 first = (struct student*)malloc(sizeof(struct student));
  printf("\nEnter the Name Of Student:\n");
  fflush(stdin);
  gets(first->name);
  printf("Enter student ID number:\n");
  scanf("%d",&first->studentid);
  printf("Enter the Name Of book:\n");
  fflush(stdin);
  gets(first->bname);
  printf("Enter Book ID number:\n");
  scanf("%d",&first->bookid);
  printf("Enter the issue date(DD/MM/YEAR):\n");
  scanf("%d/%d/%d",&first->s1.date,&first->s1.month,&first->s1.year);
  first->next = head;
  current = head;
   do
   {
   	  current = current->next;
   }while(current->next != head);
   current->next = first;
   head = first;
   }
  
}

void insertmiddle()
{
  struct student *first;
  struct student *current;
  int i,p;
  printf("Enter the Position You Want to Insert:\n");
  scanf("%d",&p);
  first = (struct student*)malloc(sizeof(struct student));
  printf("\nEnter the Name Of Student:\n");
  fflush(stdin);
  gets(first->name);
  printf("Enter student ID number:\n");
  scanf("%d",&first->studentid);
  printf("Enter the Name Of book:\n");
  fflush(stdin);
  gets(first->bname);
  printf("Enter Book ID number:\n");
  scanf("%d",&first->bookid);
  printf("Enter the issue date(DD/MM/YEAR):\n");
  scanf("%d/%d/%d",&first->s1.date,&first->s1.month,&first->s1.year);
  current = head;
  for(i=1;i<p-1;i++)
  {
  current = current->next;
  }
  first->next = current->next;
  current->next = first;
}

void insertlast()
{
  struct student *last;
  struct student *current;
  last = (struct student*)malloc(sizeof(struct student));
  printf("\nEnter the Name Of Student:\n");
  fflush(stdin);
  gets(last->name);
  printf("Enter student ID number:\n");
  scanf("%d",&last->studentid);
  printf("Enter the Name Of book:\n");
  fflush(stdin);
  gets(last->bname);
  printf("Enter Book ID number:\n");
  scanf("%d",&last->bookid);
  printf("Enter the issue date(DD/MM/YEAR):\n");
  scanf("%d/%d/%d",&last->s1.date,&last->s1.month,&last->s1.year);
  current = head;
  while(current->next != head)
  current = current->next;
  current->next = last;
  last->next = head;  
}
 
 int count()
 {
 	struct student *temp;
 	temp = head;
 	int i = 0;
 	do
 	{
 		if(head==NULL)
 		break;
	 	i++;
	 	temp = temp->next;
	 }while(temp!=head);
	 printf("TOTAL STUDENT = %d",i);
	 return i;
 }
 
 void deletefirst()
 {
	 struct student *first;
	 struct student *temp;
	 int result;
	 if(head->next=head) 
	 {
 		temp = head;
 		head->next = NULL;
 		head = head->next;
 		free(temp);
 	}
 	else
 	{
 		temp = head;
        first = head;
        while(temp->next != head)
        temp = temp->next;
        head = head->next;
        temp->next = head;
        free(first);	
	 }
	 
 }
 
void deletelast()
 {
 	struct student *last;
 	struct student *secondlast;
	last = head;
 	secondlast = head;
 	while(last->next != head)
 	{
	 	secondlast = last;
	 	last = last->next;
    }
    secondlast->next = head;	
    free(last);
 }
 
 
void deletemiddle(int p)
 {
 	struct student *del;
 	struct student *secondlast;
 	int i;
 	del = head;
 	secondlast = head;
    if(p==1)
    deletefirst();
    int result = count();
    if(p == result)
    deletelast();
 	for(i=1;i<p;i++)
 	{
 		secondlast = del;
 		del = del->next;
    }
    secondlast->next = del->next;
	free(del);  
 }
 
 void insertd()
{
  struct student *last;
  struct student *current;
  struct student *insert;
  struct student *prev;
  int n,i;
  printf("\nEnter the total number of student You want to add:\n");
  scanf("%d",&n);
  for(i=1;i<=n;i++)
  {
 	if(head==NULL)
 	  {
	 	insertfirst();
	 	n--;
	  }
	 if(n==0)
	 break;
	 if(head->next == NULL)
	 {
	 prev= head; 
     insert =(struct student*)malloc(sizeof(struct student));	
     printf("\n\nEnter the Name Of Student:\n");
     fflush(stdin);
     gets(insert->name);
     printf("Enter student ID number:\n");
     scanf("%d",&insert->studentid);
     printf("Enter the Name Of book:\n");
     fflush(stdin);
     gets(insert->bname);
     printf("Enter Book ID number:\n");
     scanf("%d",&insert->bookid);
     printf("Enter the issue date(DD/MM/YEAR):\n");
     scanf("%d/%d/%d",&insert->s1.date,&insert->s1.month,&insert->s1.year);
     head->next = insert;
     insert->next = head;
 	  n--;	
 	 }
 	if(n==0)
 	break;
  last =(struct student*)malloc(sizeof(struct student));	
  printf("\nEnter the Name Of Student:\n");
  fflush(stdin);
  gets(last->name);
  printf("Enter student ID number:\n");
  scanf("%d",&last->studentid);
  printf("Enter the Name Of book:\n");
  fflush(stdin);
  gets(last->bname);
  printf("Enter Book ID number:\n");
  scanf("%d",&last->bookid);
  printf("Enter the issue date(DD/MM/YEAR):\n");
  scanf("%d/%d/%d",&last->s1.date,&last->s1.month,&last->s1.year);
    current = head;
    while(current->next != head)
    current = current->next;
    current->next = last;
    last->next = head;
  }
}


void searchsn()
{
	struct student *temp;
	struct student *first;
	int index=0,result,i,j=0,k;
	char key[20];
	printf("Enter the name you want to search:\n");
	fflush(stdin);
	gets(key);
	first = head;
	temp = first;
	do
	{
		index = 0;
		k = 1;
    	do
	    {
    	if(strcmp(first->name,key)==0)
    	{
    	     	k=2;
	    		break;
	    }
    
		index++;
		temp = temp->next;
	    }while((temp != head && strcmp(temp->name,key) != 0));
	    result = index;	
	    if(temp!= head || (strcmp(first->name,key)==0 && k==2))
     	{
	     temp = first;
	     printf("Record Found:\n");
	     for(i=0;i<result;i++)
	     temp = temp->next;
         printf("\nName Of Student:    = %s\n",temp->name);
         printf("student ID number:    = %d\n",temp->studentid);
         printf("Name Of book:         = %s\n",temp->bname);
         printf("Book ID number:       = %d\n",temp->bookid);
         printf("issue date(DD/MM/YEAR): %d/%d/%d\n",temp->s1.date,temp->s1.month,temp->s1.year);
         for(i=0;i<=result;i++)
	     first = first->next;
	     temp = first;
	     j++;
	    }
	    else if (j==0)
	    printf("Record Not Found\n");
	    else
	    break;
	}while(temp != head);
}


void searchbn()
{
	struct student *temp;
	struct student *first;
	int index=0,result,i,j=0,k;
	char key[20];
	printf("Enter the Book Name:\n");
	fflush(stdin);
	gets(key);
	first = head;
	temp = first;
	do
	{
		index = 0;
		k = 1;
    	do
	    {
    	if(strcmp(first->bname,key)==0)
    	{
	    k=2;
		break;	
	    }
    	
		index++;
		temp = temp->next;
	    }while((temp != head && strcmp(temp->bname,key) != 0));
	    result = index;	
	    if(temp!= head || (strcmp(first->bname,key)==0 && k==2))
     	{
	     temp = first;
	     printf("Record Found:\n");
	     for(i=0;i<result;i++)
	     temp = temp->next;
         printf("\nName Of Student:    = %s\n",temp->name);
         printf("student ID number:    = %d\n",temp->studentid);
         printf("Name Of book:         = %s\n",temp->bname);
         printf("Book ID number:       = %d\n",temp->bookid);
         printf("issue date(DD/MM/YEAR): %d/%d/%d\n",temp->s1.date,temp->s1.month,temp->s1.year);
         for(i=0;i<=result;i++)
	     first = first->next;
	     temp = first;
	     j++;
	    }
	    else if (j==0)
	    printf("Record Not Found\n");
	    else
	    break;
	}while(temp != head);
}


void searchsid()
{
	struct student *temp;
	struct student *first;
	int index=0,result,i,j=0,k;
	int key;
	printf("Enter the STUDENT ID\n");
    scanf("%d",&key);
	first = head;
	temp = first;
	do
	{
		index = 0;
		k = 1;
    	do
	    {
    	if(first->studentid==key)
    	{
	        k=2;
			break;	
	    }
		index++;
		temp = temp->next;
	    }while((temp != head && temp->studentid!=key));
	    result = index;	
	    if(temp!= head || (first->studentid == key && k==2 ))
     	{
	     temp = first;
	     printf("Record Found:\n");
	     for(i=0;i<result;i++)
	     temp = temp->next;
         printf("\nName Of Student:    = %s\n",temp->name);
         printf("student ID number:    = %d\n",temp->studentid);
         printf("Name Of book:         = %s\n",temp->bname);
         printf("Book ID number:       = %d\n",temp->bookid);
         printf("issue date(DD/MM/YEAR): %d/%d/%d\n",temp->s1.date,temp->s1.month,temp->s1.year);
         for(i=0;i<=result;i++)
	     first = first->next;
	     temp = first;
	     j++;
	    }
	    else if (j==0)
	    printf("Record Not Found\n");
	    else
	    break;
	}while(temp != head);
}

void searchbid()
{
	struct student *temp;
	struct student *first;
	int index=0,result,i,j=0,k;
	int key;
	printf("Enter the BOOK ID\n");
    scanf("%d",&key);
	first = head;
	temp = first;
	do
	{
		index = 0;
		k = 1;
    	do
	    {
    	if(first->bookid==key)
    	{
	        k=2;
			break;	
	    }
		index++;
		temp = temp->next;
	    }while((temp != head && temp->bookid!=key));
	    result = index;	
	    if(temp!= head || (first->bookid == key && k==2 ))
     	{
	     temp = first;
	     printf("Record Found:\n");
	     for(i=0;i<result;i++)
	     temp = temp->next;
         printf("\nName Of Student:    = %s\n",temp->name);
         printf("student ID number:    = %d\n",temp->studentid);
         printf("Name Of book:         = %s\n",temp->bname);
         printf("Book ID number:       = %d\n",temp->bookid);
         printf("issue date(DD/MM/YEAR): %d/%d/%d\n",temp->s1.date,temp->s1.month,temp->s1.year);
         for(i=0;i<=result;i++)
	     first = first->next;
	     temp = first;
	     j++;
	    }
	    else if (j==0)
	    printf("Record Not Found\n");
	    else
	    break;
	}while(temp != head);
}

void deletebname(char key[])
{
	struct student *temp;
	int index=1,i,result,l=0,k;
	temp = head;
	do
	{
		k=1;
	if(strcmp(head->bname,key) == 0)
	{
		k=2;
	   break;
	}
	   index++;
	   temp = temp->next;
	}while(temp != head && strcmp(temp->bname,key) != 0);
	if(temp!= head)
	printf("THE NAME IS AT POSITION %d\n",index);
	result = count();
	
    if(temp!= head||k==2)
   	{ 
        l = 1;
        if (index==1 || k==2)
        deletefirst();
        else if(index==result)
        deletelast();
        else
        deletemiddle(index);
    }
       else
       printf("\nRecord not found!\n");
       if(l==1 && head!= NULL)
       deletebname(key);
}
void deletesid()
{
	struct student *temp;
	int index=1,i,result,k;
	int key;
	printf("\nEnter the STUDENT ID you want to delete:\n");
    scanf("%d",&key);
	temp = head;
	do
	{
		k=1;
	  if(head->studentid == key)
	  {
	  	k=2;
  		break;
  	}
	  
	  index++;
	  temp = temp->next;
	}while(temp != head && (temp->studentid !=key));
	printf("THE NAME IS AT POSITION %d\n",index);
	result = count();
	
    if(temp!= head || k==2)
   	{ 
  
        if (index==1||k==2)
        deletefirst();
        else if(index==result)
        deletelast();
        else
        deletemiddle(index);
    }
       else
       printf("\nRecord not found!\n");
}

void deletebid()
{
	struct student *temp;
	int index=1,i,result,k;
	int key;
	printf("\nEnter the BOOK ID you want to delete:\n");
    scanf("%d",&key);
	temp = head;
	do
	{
	 k=1;
	  if(temp->bookid==key)
	  {
	  	k=2;
  		break;
  	}
	  
	  index++;
	  temp = temp->next;
	}while(temp != head && (temp->bookid !=key));
	printf("THE NAME IS AT POSITION %d\n",index);
	result = count();
	
    if(temp!= head || k==2 )
   	{ 
  
        if (index==1||k==2)
        deletefirst();
        else if(index==result)
        deletelast();
        else
        deletemiddle(index);
    }
       else
       printf("\nRecord not found!\n");
}

void deletesname(char key[])
{
	struct student *temp;
	int index=1,i,result,l=0,k;
	temp = head;
	do
	{
		k=1;
	if(strcmp(head->name,key) == 0)
	{
       k=2;
	   break;
	}
    index++;
    temp = temp->next;
	}while(temp != head && strcmp(temp->name,key) != 0);
	if(temp!= head)
	printf("THE NAME IS AT POSITION %d\n",index);
    if(temp!= head|| k==2)
   	{ 
        l = 1;
        if (index==1 || k==2)
        deletefirst();
        else if(index==count())
        deletelast();
        else
        deletemiddle(index);
    }
       else
       printf("\nRecord not found!\n");
       if(l==1 && head!=NULL)
       deletesname(key);
}

void deleteall()
{
  struct student *temp;
  temp = head;
  while(temp->next != head)
  {
  head = head->next;
  free(temp);
  }
  head = NULL;
}



void reverse()
{
    struct student *prev, *cur,*last;
    last = head;

    prev  = head;
    cur   = head->next;
    head = head->next;
    while (head != last)
    {
        head = head->next;
        cur->next = prev;
        prev = cur;
        cur  = head;
    }
   cur->next = prev;
   head = prev; 
}

void sortingsid()
{
	struct student *temp;
	struct student *prev;
	int data;
	char str[20];
	temp = head;
	prev = head;
	do
	{
	temp = prev->next;
	while(temp!=head)
	{
	if(prev->studentid > temp->studentid)
	{
	data = prev->studentid;
	prev->studentid = temp->studentid;
	temp->studentid = data;
	data = prev->bookid;
	prev->bookid = temp->bookid;
	temp->bookid = data;
	strcpy(str,prev->name);
	strcpy(prev->name,temp->name);
	strcpy(temp->name,str);
	strcpy(str,prev->bname);
	strcpy(prev->bname,temp->bname);
	strcpy(temp->bname,str);
	data = prev->s1.date;
	prev->s1.date= temp->s1.date;
    temp->s1.date = data;
	data = prev->s1.month;
	prev->s1.month= temp->s1.month;
	temp->s1.month = data;
	data = prev->s1.year;
	prev->s1.year= temp->s1.year;
	temp->s1.year = data;	
	}
	temp = temp->next;
	}
	prev = prev->next;
	}while(prev->next!=head);
}

void sortingbid()
{
	struct student *temp;
	struct student *prev;
	int data;
	char str[20];
	temp = head;
	prev = head;
	do 
	{
	temp = prev->next;
	while(temp!=head)
	{
	if(prev->bookid > temp->bookid)
	{
	data = prev->studentid;
	prev->studentid = temp->studentid;
	temp->studentid = data;
	data = prev->bookid;
	prev->bookid = temp->bookid;
	temp->bookid = data;
	strcpy(str,prev->name);
	strcpy(prev->name,temp->name);
	strcpy(temp->name,str);
	strcpy(str,prev->bname);
	strcpy(prev->bname,temp->bname);
	strcpy(temp->bname,str);
	data = prev->s1.date;
	prev->s1.date= temp->s1.date;
	temp->s1.date = data;
	data = prev->s1.month;
	prev->s1.month= temp->s1.month;
	temp->s1.month = data;
	data = prev->s1.year;
	prev->s1.year= temp->s1.year;
	temp->s1.year = data;	
	}
	temp = temp->next;
	}
	prev = prev->next;
	}while(prev->next!=head);
}

void sortingname()
{
	struct student *temp;
	struct student *prev;
	int data;
	char str[20];
     if(head!=NULL &&head->next != NULL)
    {
	temp = head;
	prev = head;
    do
	{
	temp = prev->next;
	while(temp!=head)
	{
	if(strcmp(prev->name,temp->name)>0)
	{
	data = prev->studentid;
	prev->studentid = temp->studentid;
	temp->studentid = data;
	data = prev->bookid;
	prev->bookid = temp->bookid;
	temp->bookid = data;
	strcpy(str,prev->name);
	strcpy(prev->name,temp->name);
	strcpy(temp->name,str);
	strcpy(str,prev->bname);
	strcpy(prev->bname,temp->bname);
	strcpy(temp->bname,str);
	data = prev->s1.date;
	prev->s1.date= temp->s1.date;
	temp->s1.date = data;
	data = prev->s1.month;
	prev->s1.month= temp->s1.month;
	temp->s1.month = data;
	data = prev->s1.year;
	prev->s1.year= temp->s1.year;
	temp->s1.year = data;	
	}
	temp = temp->next;
	}
	prev = prev->next;
	}while(prev->next!=head);
    }
}

void sortingbname()
{
	struct student *temp;
	struct student *prev;
	int data;
	char str[20];
	temp = head;
	prev = head;
	do 
	{
	temp = prev->next;
	while(temp!=head)
	{
	if(strcmp(prev->bname,temp->bname)>0)
	{
	data = prev->studentid;
	prev->studentid = temp->studentid;
	temp->studentid = data;
	data = prev->bookid;
	prev->bookid = temp->bookid;
	temp->bookid = data;
	strcpy(str,prev->name);
	strcpy(prev->name,temp->name);
	strcpy(temp->name,str);
	strcpy(str,prev->bname);
	strcpy(prev->bname,temp->bname);
	strcpy(temp->bname,str);
	data = prev->s1.date;
	prev->s1.date= temp->s1.date;
	temp->s1.date = data;
	data = prev->s1.month;
	prev->s1.month= temp->s1.month;
	temp->s1.month = data;
	data = prev->s1.year;
	prev->s1.year= temp->s1.year;
	temp->s1.year = data;	
	}
	temp = temp->next;
	}
	prev = prev->next;
	}while(prev->next!=head);
}

void insertbyname()
{
	if(head==NULL)
	insertfirst();
	else
	{
    sortingname();
    struct student *first;
    struct student *temp;
    struct student *current;
    first = (struct student*)malloc(sizeof(struct student));
    printf("Enter the Name Of Student:\n");
    fflush(stdin);
    gets(first->name);
    printf("\nEnter student ID number:\n");
    scanf("%d",&first->studentid);
    printf("Enter the Name Of book:\n");
    fflush(stdin);
    gets(first->bname);
    printf("Enter Book ID number:\n");
    scanf("%d",&first->bookid);
    printf("Enter the issue date(DD/MM/YEAR):\n");
    scanf("%d/%d/%d",&first->s1.date,&first->s1.month,&first->s1.year);
    if(strcmp(head->name,first->name)>=0)
    {
    first->next = head;
    if(head->next== head)
    {
    	head->next->next = first;
    }
    current = head;
    do
    {
   	  if(head->next== head)
   	  break;
    current = current->next;
    }while(current->next != head);
    current->next = first;
    head = first;
    }
    else
    {
    temp = head;
    while(temp->next != head && strcmp(temp->next->name,first->name)<0) 
    {
   	temp = temp->next;
    }
    first->next = temp->next;
    temp->next = first;
    }
	}

}

void insertbybname()
{
	sortingbname();
	struct student *first;
	struct student *temp;
	struct student *current;
	first = (struct student*)malloc(sizeof(struct student));
    printf("Enter the Name Of Student:\n");
    fflush(stdin);
    gets(first->name);
    printf("\nEnter student ID number:\n");
    scanf("%d",&first->studentid);
    printf("Enter the Name Of book:\n");
    fflush(stdin);
    gets(first->bname);
    printf("Enter Book ID number:\n");
    scanf("%d",&first->bookid);
    printf("Enter the issue date(DD/MM/YEAR):\n");
    scanf("%d/%d/%d",&first->s1.date,&first->s1.month,&first->s1.year);
    if(strcmp(head->bname,first->bname)>=0)
    {
   	first->next = head;
    current = head;
    do
    {
    current = current->next;
    }while(current->next != head);
    current->next = first;
    head = first;
    }
    else
    {
  	 temp = head;
    while(temp->next != head && strcmp(temp->next->bname,first->bname)<0)
    {
   	temp = temp->next;
    }
    first->next = temp->next;
    temp->next = first;
    }
}

void insertbysid()
{
   sortingsid();
   struct student *first;
   struct student *temp;
   struct student *current;
   first = (struct student*)malloc(sizeof(struct student));
   printf("Enter the Name Of Student:\n");
   fflush(stdin);
   gets(first->name);
   printf("\nEnter student ID number:\n");
   scanf("%d",&first->studentid);
   printf("Enter the Name Of book:\n");
   fflush(stdin);
   gets(first->bname);
   printf("Enter Book ID number:\n");
   scanf("%d",&first->bookid);
   printf("Enter the issue date(DD/MM/YEAR):\n");
   scanf("%d/%d/%d",&first->s1.date,&first->s1.month,&first->s1.year);
   if(head->studentid > first->studentid)
   {
   first->next = head;
   current = head;
   do
   {
   current = current->next;
   }while(current->next != head);
   current->next = first;
   head = first;
   }
   else
  {
  temp = head;
  while(temp->next != head && (temp->next->studentid < first->studentid))
  {
  temp = temp->next;
  }
  first->next = temp->next;
  temp->next = first;
  }
}

void insertbybid()
{
	sortingbid();
	struct student *first;
	struct student *temp;
	struct student *current;
	first = (struct student*)malloc(sizeof(struct student));
    printf("Enter the Name Of Student:\n");
    fflush(stdin);
    gets(first->name);
    printf("\nEnter student ID number:\n");
    scanf("%d",&first->studentid);
    printf("Enter the Name Of book:\n");
    fflush(stdin);
    gets(first->bname);
    printf("Enter Book ID number:\n");
    scanf("%d",&first->bookid);
    printf("Enter the issue date(DD/MM/YEAR):\n");
    scanf("%d/%d/%d",&first->s1.date,&first->s1.month,&first->s1.year);
    if(head->bookid > first->bookid)
    {
    first->next = head;
    current = head;
    do
    {
    current = current->next;
    }while(current->next != head);
    current->next = first;
    head = first;
    }
    else
	{
    temp = head;
    while(temp->next != head && (temp->next->bookid < first->bookid)) 
    {
    temp = temp->next;
    }
    first->next = temp->next;
    temp->next = first;
    }
}

void replacebyname(char key[],int n)
{
	int i,j,k=0;
	struct student *temp;
	struct student *first;
	temp = head;
	do 
	{
	if(strcmp(temp->name,key)==0)
	{
	first = temp;
	k=1;
    break;
	}
	temp = temp->next;
	}while(temp!=head);	
	if(temp!=head||k==1)
	{
	if(n==1)
	{
		strcpy(temp->name,ref->name);
		temp->studentid = ref->studentid;
		strcpy(temp->bname ,ref->bname);
		temp->bookid = ref->bookid;
	    temp->s1.date = ref->s1.date;
	    temp->s1.month = ref->s1.month;
	    temp->s1.year = ref->s1.year;  
	}
	else
	{
     printf("Enter the Name Of Student:\n");
     fflush(stdin);
     gets(first->name);
     printf("\nEnter student ID number:\n");
     scanf("%d",&first->studentid);
     printf("Enter the Name Of book:\n");
     fflush(stdin);
     gets(first->bname);
     printf("Enter Book ID number:\n");
     scanf("%d",&first->bookid);
     printf("Enter the issue date(DD/MM/YEAR):\n");
     scanf("%d/%d/%d",&first->s1.date,&first->s1.month,&first->s1.year);
     n=1;
	}
	
     ref = temp;
	}
    if(k==1 && n==1)
    replacebyname(key,1);
    else
	printf("NOT FOUND!!\n");
}

